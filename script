-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.approves
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_id integer NOT NULL,
    approval_date date NOT NULL,
    is_approved boolean,
    CONSTRAINT approves_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employer_email_approves
(
    approve_id integer UNIQUE  NOT NULL,
    email character varying COLLATE pg_catalog."default"  UNIQUE NOT NULL,
    CONSTRAINT employer_email_approves_pkey PRIMARY KEY (approve_id)
);

CREATE TABLE IF NOT EXISTS public.employer_hmrs_manager_approves
(
    approve_id integer UNIQUE  NOT NULL,
    approved_manager_id integer NOT NULL,
    CONSTRAINT employer_hmrs_manager_approves_pkey PRIMARY KEY (approve_id)
);

CREATE TABLE IF NOT EXISTS public.employer_users
(
    user_id integer  UNIQUE NOT NULL,
    company_name character varying(50) COLLATE pg_catalog."default" UNIQUE  NOT NULL,
    website character varying(50) COLLATE pg_catalog."default"  UNIQUE NOT NULL,
    phone_number character(11) COLLATE pg_catalog."default"  UNIQUE NOT NULL,
    CONSTRAINT employer_users_pkey PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public.job_positions
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" UNIQUE  NOT NULL,
    CONSTRAINT job_positions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_seeker_email_approves
(
    approve_id integer  UNIQUE NOT NULL,
    email character varying COLLATE pg_catalog."default" UNIQUE NOT NULL,
    CONSTRAINT job_seeker_email_approves_pkey PRIMARY KEY (approve_id)
);

CREATE TABLE IF NOT EXISTS public.job_seeker_mernis_approves
(
    approve_id integer UNIQUE  NOT NULL,
    CONSTRAINT job_seeker_mernis_approves_pkey PRIMARY KEY (approve_id)
);

CREATE TABLE IF NOT EXISTS public.job_seeker_users
(
    user_id integer  UNIQUE NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    nationality_id character(11) COLLATE pg_catalog."default" UNIQUE  NOT NULL,
    date_of_birth date NOT NULL,
    CONSTRAINT job_seeker_users_pkey PRIMARY KEY (user_id)
);



CREATE TABLE IF NOT EXISTS public.system_users
(
    user_id integer  UNIQUE NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    nationality_id character(11) COLLATE pg_catalog."default"  UNIQUE NOT NULL,
    date_of_birth date NOT NULL,
    CONSTRAINT system_users_pkey PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    password character varying(20) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default"  UNIQUE NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.approves
    ADD CONSTRAINT approves_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employer_email_approves
    ADD CONSTRAINT employer_email_approves_approve_id_fkey FOREIGN KEY (approve_id)
    REFERENCES public.approves (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS employer_email_approves_approve_id_key
    ON public.employer_email_approves(approve_id);


ALTER TABLE IF EXISTS public.employer_hmrs_manager_approves
    ADD CONSTRAINT employer_hmrs_manager_approves_approve_id_fkey FOREIGN KEY (approve_id)
    REFERENCES public.approves (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS employer_hmrs_manager_approves_approve_id_key
    ON public.employer_hmrs_manager_approves(approve_id);


ALTER TABLE IF EXISTS public.employer_hmrs_manager_approves
    ADD CONSTRAINT employer_hmrs_manager_approves_approved_manager_id_fkey FOREIGN KEY (approved_manager_id)
    REFERENCES public.system_users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employer_users
    ADD CONSTRAINT employer_users_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS employer_users_user_id_key
    ON public.employer_users(user_id);


ALTER TABLE IF EXISTS public.job_seeker_email_approves
    ADD CONSTRAINT job_seeker_email_approves_approve_id_fkey FOREIGN KEY (approve_id)
    REFERENCES public.approves (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS job_seeker_email_approves_approve_id_key
    ON public.job_seeker_email_approves(approve_id);


ALTER TABLE IF EXISTS public.job_seeker_mernis_approves
    ADD CONSTRAINT job_seeker_mernis_approves_approve_id_fkey FOREIGN KEY (approve_id)
    REFERENCES public.approves (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS job_seeker_mernis_approves_approve_id_key
    ON public.job_seeker_mernis_approves(approve_id);


ALTER TABLE IF EXISTS public.job_seeker_users
    ADD CONSTRAINT job_seeker_users_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS job_seeker_users_user_id_key
    ON public.job_seeker_users(user_id);


ALTER TABLE IF EXISTS public.system_users
    ADD CONSTRAINT system_users_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS system_users_pkey
    ON public.system_users(user_id);

END;